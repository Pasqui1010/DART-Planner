# ================================
# DART-Planner: Development Docker Image
# Optimized for development with hot-reload and debugging tools
# ================================

# ================================
# Stage 1: Base Development Environment
# ================================
FROM python:3.11-slim as dev-base

# Install system dependencies and development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    # OpenGL and graphics support
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    # Development tools
    build-essential \
    cmake \
    git \
    vim \
    curl \
    wget \
    htop \
    tree \
    jq \
    # Debugging tools
    gdb \
    valgrind \
    strace \
    # Network tools
    netcat \
    telnet \
    # Security tools
    ca-certificates \
    gnupg \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/*

# Create non-root user for development
RUN groupadd -r dartplanner && useradd -r -g dartplanner dartplanner -s /bin/bash \
    && mkdir -p /home/dartplanner \
    && chown -R dartplanner:dartplanner /home/dartplanner

# ================================
# Stage 2: Python Development Environment
# ================================
FROM dev-base as dev-python

# Upgrade pip and install development tools
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Install development and testing dependencies
COPY requirements/requirements-dev.txt /tmp/requirements-dev.txt
COPY requirements/requirements.txt /tmp/requirements.txt

# Install core dependencies first
RUN pip install --no-cache-dir --user \
    numpy>=1.21.0 \
    scipy>=1.7.0 \
    matplotlib>=3.5.0 \
    pillow>=8.3.0

# Install web framework dependencies
RUN pip install --no-cache-dir --user \
    fastapi>=0.68.0 \
    uvicorn[standard]>=0.15.0 \
    websockets>=10.0 \
    jinja2>=3.0.0 \
    python-multipart>=0.0.5

# Install development tools
RUN pip install --no-cache-dir --user \
    pytest>=6.0.0 \
    pytest-cov>=3.0.0 \
    pytest-asyncio>=0.18.0 \
    black>=22.0.0 \
    flake8>=4.0.0 \
    mypy>=0.910 \
    isort>=5.0.0 \
    pre-commit>=2.15.0 \
    jupyter>=1.0.0 \
    ipython>=8.0.0 \
    debugpy>=1.6.0

# Install remaining dependencies
RUN pip install --no-cache-dir --user -r /tmp/requirements-dev.txt

# ================================
# Stage 3: Development Runtime
# ================================
FROM dev-base as development

# Copy Python environment from builder
COPY --from=dev-python /root/.local /home/dartplanner/.local

# Set working directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /home/dartplanner/.dart_planner \
    && mkdir -p /home/dartplanner/.config \
    && mkdir -p /app/static \
    && mkdir -p /app/logs \
    && mkdir -p /app/coverage \
    && mkdir -p /app/tests \
    && chown -R dartplanner:dartplanner /app \
    && chown -R dartplanner:dartplanner /home/dartplanner

# Switch to non-root user
USER dartplanner

# Development environment configuration
ENV PATH=/home/dartplanner/.local/bin:$PATH \
    PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    DART_PLANNER_MODE=development \
    DART_LOG_LEVEL=DEBUG \
    DART_DEBUG_MODE=true \
    DART_HOT_RELOAD=true \
    DART_METRICS_ENABLED=true \
    DART_PERFORMANCE_MONITORING=true \
    MPLCONFIGDIR=/home/dartplanner/.config/matplotlib

# Development-specific settings
ENV DART_SECRET_KEY=dev-secret-key-for-development \
    DART_CORS_ORIGINS=["*"] \
    DART_RATE_LIMIT_ENABLED=false \
    DART_TESTING_MODE=true

# Jupyter configuration
ENV JUPYTER_ENABLE_LAB=yes \
    JUPYTER_TOKEN=dartplanner-dev

# Expose ports for development
EXPOSE 8080 8888 5678

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# Labels for metadata
LABEL \
    org.opencontainers.image.title="DART-Planner Development" \
    org.opencontainers.image.description="Development environment for DART-Planner" \
    org.opencontainers.image.version="1.0.0-dev" \
    org.opencontainers.image.authors="DART-Planner Team"

# Default command - start in development mode with hot reload
CMD ["python", "-m", "uvicorn", "web_demo.app:app", "--host", "0.0.0.0", "--port", "8080", "--reload", "--reload-dir", "/app/src", "--reload-dir", "/app/web_demo"] 