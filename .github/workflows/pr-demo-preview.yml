name: PR Docker Preview

on:
  pull_request:
    branches: [ main, develop ]

# Cancel in-progress runs on new commits to same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # Only allow commenting on PRs from the same repository (not forks)
      pull-requests: write
    # Only run on PRs from the same repository (not forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-pr-${{ github.event.pull_request.number }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-pr-${{ github.event.pull_request.number }}-
            ${{ runner.os }}-buildx-pr-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image for web demo
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: demos/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dart-planner/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Post comment with pull instructions
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-docker-preview
          message: |
            ðŸš€ **Docker preview image available!**

            Pull it locally:
            ```bash
            docker pull ghcr.io/${{ github.repository_owner }}/dart-planner/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
            docker run --rm -it -p 8080:8080 ghcr.io/${{ github.repository_owner }}/dart-planner/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
            ```
            Then open http://localhost:8080 in your browser to interact with the DART-Planner demo.
