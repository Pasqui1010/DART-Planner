#
# SITL (Software-In-The-Loop) TEST WORKFLOW
# This workflow focuses specifically on SITL testing and simulation validation.
# Code quality checks are now handled by quality-pipeline.yml

name: DART-Planner SITL Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  PYTHON_VERSION: '3.11'
  AIRSIM_VERSION: '1.8.1'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: SITL Unit Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
        
    - name: Run SITL unit tests
      run: |
        pytest tests/test_sitl_unit_tests.py -v --tb=short
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: test-results/
        
  mock-sitl-tests:
    runs-on: ubuntu-latest
    name: Mock SITL Tests
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
        
    - name: Run mock SITL tests
      run: |
        python scripts/run_sitl_tests.py --config smoke --mock --timeout 300
        
    - name: Upload mock test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mock-sitl-results
        path: results/sitl/
        
  airsim-sitl-tests:
    runs-on: windows-latest  # AirSim works best on Windows
    name: AirSim SITL Tests
    needs: mock-sitl-tests
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[full-test]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
        
    - name: Download and setup AirSim
      run: |
        # Download AirSim binary (Windows)
        Invoke-WebRequest -Uri "https://github.com/Microsoft/AirSim/releases/download/v${{ env.AIRSIM_VERSION }}/AirSimNH-Windows.zip" -OutFile "AirSim.zip"
        Expand-Archive -Path "AirSim.zip" -DestinationPath "AirSim"
        
        # Copy AirSim settings
        Copy-Item "airsim_settings.json" -Destination "$env:USERPROFILE\Documents\AirSim\settings.json"
        
    - name: Start AirSim
      run: |
        # Start AirSim in background
        Start-Process -FilePath "AirSim\WindowsNoEditor\AirSimNH.exe" -ArgumentList "-windowed", "-ResX=640", "-ResY=480"
        
        # Wait for AirSim to start
        Start-Sleep -Seconds 30
        
    - name: Test AirSim connection
      run: |
        python scripts/test_airsim_connection.py
        
    - name: Run AirSim SITL smoke tests
      run: |
        python scripts/run_sitl_tests.py --config smoke --timeout 600
      timeout-minutes: 15
      
    - name: Run AirSim SITL performance tests
      run: |
        python scripts/run_sitl_tests.py --config performance --timeout 900
      timeout-minutes: 20
      continue-on-error: true  # Performance tests may fail due to CI environment
      
    - name: Upload AirSim test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: airsim-sitl-results
        path: results/sitl/
        
    - name: Upload AirSim logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: airsim-logs
        path: logs/ 